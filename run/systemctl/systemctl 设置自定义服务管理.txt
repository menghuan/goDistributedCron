[systemctl 设置自定义服务管理]

1.建立服务文件 文件路径
master节点:
vim /usr/lib/systemd/system/distributed-cron-master.service
    [Unit]
    # 服务描述
    Description=distributed-cron-master
    # 要求必须执行网络
    Requires=network-online.target
    # 依赖，当依赖的服务启动之后再启动自定义的服务 在网络启动之后启动
    After=network-online.target

    [Service]
    # 简单服务
    Type=simple
    # 运行用户与用户组
    User=work
    Group=work
    # 进程退出立即重启
    Restart=always
    # 执行命令
    ExecStart=/usr/go/src/goDistributedCron/master/main -config=/usr/go/src/goDistributedCron/master/master.json
    # 进程工作目录
    WorkingDirectory=/usr/go/src/goDistributedCron/master

    [Install]
    # 多用户 在系统启动后加载UNIT
    WantedBy=multi-user.target


worker节点:
    [Unit]
    # 服务描述
    Description=distributed-cron-worker
    # 要求必须执行网络
    Requires=network-online.target
    # 依赖，当依赖的服务启动之后再启动自定义的服务 在网络启动之后启动
    After=network-online.target

    [Service]
    # 简单服务
    Type=simple
    # 运行用户与用户组
    User=work
    Group=work
    # 进程退出立即重启
    Restart=always
    # 执行命令
    ExecStart=/usr/go/src/goDistributedCron/worker/main -config=/usr/go/src/goDistributedCron/worker/worker.json
    # 进程工作目录
    WorkingDirectory=/usr/go/src/goDistributedCron/worker

    [Install]
    # 多用户 在系统启动后加载UNIT
    WantedBy=multi-user.target


文件说明
[Unit]:服务的说明
Description:描述服务
After:依赖，当依赖的服务启动之后再启动自定义的服务

[Service]服务运行参数的设置
Type=forking是后台运行的形式
ExecStart为服务的具体运行命令
ExecReload为重启命令
ExecStop为停止命令
PrivateTmp=True表示给服务分配独立的临时空间
注意：启动、重启、停止命令全部要求使用绝对路径

[Install]服务安装的相关设置，可设置为多用户
Type
Type=simple（默认值）：systemd认为该服务将立即启动。服务进程不会fork。如果该服务要启动其他服务，不要使用此类型启动，除非该服务是socket激活型。

Type=forking：systemd认为当该服务进程fork，且父进程退出后服务启动成功。对于常规的守护进程（daemon），除非你确定此启动方式无法满足需求，使用此类型启动即可。使用此启动类型应同时指定 PIDFile=，以便systemd能够跟踪服务的主进程。

Type=oneshot：这一选项适用于只执行一项任务、随后立即退出的服务。可能需要同时设置 RemainAfterExit=yes使得systemd在服务进程退出之后仍然认为服务处于激活状态

Type=notify：与 Type=simple相同，但约定服务会在就绪后向systemd发送一个信号。这一通知的实现由 libsystemd-daemon.so提供。

Type=dbus：若以此方式启动，当指定的 BusName 出现在DBus系统总线上时，systemd认为服务就绪。

PIDFile ： pid文件路径
ExecStartPre ：启动前要做什么，上文中是测试配置文件 －t
2.保存目录
/usr/lib/systemd/system
3.设置开机自启动
任意目录下执行

systemctl enable distributed-cron-master.service
systemctl enable distributed-cron-worker.service
4.使用命令
启动服务

systemctl start distributed-cron-master.service
systemctl start distributed-cron-worker.service
设置开机自动启动

systemctl enable distributed-cron-master.service
systemctl enable distributed-cron-worker.service
停止开机自动启动

systemctl disable distributed-cron-master.service
systemctl disable distributed-cron-worker.service
查看状态

systemctl status distributed-cron-master.service
systemctl status distributed-cron-worker.service
重启服务

systemctl restart distributed-cron-master.service
systemctl restart distributed-cron-worker.service
查看所有服务

systemctl list-units --type=service